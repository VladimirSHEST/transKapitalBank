plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
    id "io.freefair.lombok" version "6.0.0-m2"
}

group = 'ru.vladimir'
version = '1.0-SNAPSHOT'

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"
javadoc.options.encoding = "UTF-8"
tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation(
            'org.junit.jupiter:junit-jupiter:5.8.2',       // полный junit
            'com.codeborne:selenide:7.2.1',
            'org.assertj:assertj-core:3.25.3',             //  чтоб быстрее писать код
            'org.slf4j:slf4j-simple:2.0.6',                //  для лучшей расшифровки кода в run

            'com.github.javafaker:javafaker:1.0.2',         //  javafaker

            'io.qameta.allure:allure-selenide:2.19.0',     //интеграция с селенидом
            'io.qameta.allure:allure-java-commons: 2.19.0',    //  allure
            'io.qameta.allure:allure-junit5:2.19.0',
            'io.qameta.allure:allure-assertj:2.25.0',
            'io.qameta.allure:allure-rest-assured:2.19.0',   //для api тестов
            'org.aspectj:aspectjweaver:1.9.20',
            'io.rest-assured:rest-assured:5.3.0',
            'org.apache.commons:commons-lang3:3.8.1',
            'com.fasterxml.jackson.core:jackson-databind:2.14.2'

    )
}

tasks.withType(Test).configureEach {
    systemProperties(System.getProperties())
    useJUnitPlatform()


    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

allure {
    report {
        version.set("2.19.0")
    }
    adapter { // отвечает за появление папочки build/allure-results
        aspectjWeaver.set(true) //обработка аннотации @Step
        frameworks {
            junit5 { //название фреймворка
                adapterVersion.set("2.19.0") //версия интеграции фреймворка и Allure
            }
        }
    }
}
